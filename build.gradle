plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.4.1.3373"
	id "jacoco"
}

jacoco {
	// Jacoco 버전
	toolVersion = '0.8.8'
}

jacocoTestReport {
	dependsOn test
	mustRunAfter test

	reports {
		xml.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
		csv.required = false
	}
}

jacocoTestCoverageVerification {
	mustRunAfter jacocoTestReport

	violationRules {
		rule {
			element = 'CLASS'

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.0
			}

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.00
			}

			limit {
				counter = 'METHOD'
				value = 'COVEREDRATIO'
				minimum = 0.0
			}
		}

		rule {
			element = 'METHOD'

			excludes = [
			        "*"
			]

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 200
			}
		}
	}
}

tasks.register('testCoverage', Test) {
	group 'verification'
	description 'Runs the unit tests with coverage'

	dependsOn('test', 'jacocoTestReport', 'jacocoTestCoverageVerification')
}

sonar {
	properties {
		property "sonar.projectKey", "nimohLee_glomo_AY_yMRogb_WNf9--_QUt"
	}
}

group = 'com.devleoh'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'dev.langchain4j:langchain4j-open-ai:0.30.0'
	implementation 'dev.langchain4j:langchain4j-easy-rag:0.30.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
