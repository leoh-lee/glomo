plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.4.1.3373"
	id "jacoco"
}

jacoco {
	// Jacoco 버전
	toolVersion = '0.8.10'
	reportsDirectory = layout.buildDirectory.dir('jacocoReport')
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
		csv.required = false
		html.required = true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'**/config/*',
							'com/devleoh/glomo/GlomoApplication.*',
							'com/devleoh/**/*DTO.*',
							'com/devleoh/**/model/*'
			])
		}))
	}

	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}
			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 200
			}
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}
			excludes = [
				"**.config.*",
				'**.GlomoApplication*',
				'com.devleoh.**.*DTO.*',
				'com/devleoh/**/model/*'
			]
		}
	}
}

sonar {
	properties {
		property "sonar.projectKey", "nimohLee_glomo_AY_yMRogb_WNf9--_QUt"
	}
}

group = 'com.devleoh'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'dev.langchain4j:langchain4j-open-ai:0.30.0'
	implementation 'dev.langchain4j:langchain4j-easy-rag:0.30.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	finalizedBy jacocoTestReport
	useJUnitPlatform()

	jacoco {
		excludes += ["**/config/*",
					 'com/devleoh/glomo/GlomoApplication.*',
					 'com/devleoh/**/*DTO.*',
					 'com/devleoh/**/model/*'
		]
	}
}

tasks.named('jacocoTestReport') {
	dependsOn 'test'
}

tasks.named('sonar') {
	dependsOn 'jacocoTestReport'
}